-- 학습 계획 --
주말 >> 배운 내용 정리, 밀린 내용 학습 
시험 기간에는 배운 내용 복습 정도만 가능할듯,, 

알고_주 2~3문제
바킹독_주 1~2강(연습문제도 있음)
C,C++_주 2~3 chapter씩 하기

알고리즘_https://velog.io/@ngngs/%ED%95%9C-%EC%9E%A5%EC%9C%BC%EB%A1%9C-%EB%B3%B4%EB%8A%94-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98
파트2: 13개, 3: 16개, 4: 12개
총 44문제
>> 4개월 

바킹독_https://blog.encrypted.gg/919
25강
>> 4개월
문제 링크_https://github.com/encrypted-def/basic-algo-lecture/blob/master/workbook.md
연습 문제

모코_C,C++_https://modoocode.com/231
C: 14강, C++: 22강
총 39챕터
>> 4개월 
-------------
추가 사이트 
1. 생활 코딩(C/C++은없음)
https://opentutorials.org/course/1

2. SOEN
http://www.soen.kr/
C: 20강, C++: 18강 
3. 파일의 IT 블로그
https://pgh268400.tistory.com/5?category=1072473%20
C 20강

--------------
0923
-- 모코 -- 
13-1. function
함수는 서로 다른 함수를 알지 못함
다른 함수에서 선언된 변수를 알 수 없음
13-2. function
배열을 인자로 받기, 배열을 포인터로 선언 "*parr"하면
배열 "arr"을 가리킴
함수의 원형 -> main함수 이전에 함수들 이름만 선언("이때, 마지막에 ";" 추가함")
하고 마지막에 각 함수들의 내용을 추가함 
함수 내부의 변수는 내부에서만 사용이 가능하고 변경이 가능함
만약 외부의 함수에서 값을 변경하려면 "Pointer"를 활용해야하며
포인터를 활용했을 때, 해당 값의 주소는 외부 함수로 이동하지 않고
내부 함수에서 설정된 주소가 그대로 사용됨

-- 바킹독 -- 
-0x08강_스택의 활용(수식의 괄호쌍)
0x00 수식의 괄호 쌍이란?
소,중,대괄호들이 맞물리도록 쌍이 맞아야하는 문제

0x01 문제 해결을 위한 관찰
접근 방식 생각할 때 관찰하면서 이렇게 하면 될듯

0x02 문제 해결 방법 
>>> "스택"이 가장 효율적
배열은 중간에서 부터 시작하면 O(N^2)
연결 리스트는 O(N)

0x03 연습 문제 
복습-getline함수
"std::cin을 사용하면 공백을 기준으로 입력을 받지만, 
getline 함수는 엔터 키(줄바꿈 문자)까지를 포함한 한 줄 전체를 
입력받을 수 있다."
사용법  
>>>> "getline(cin, input)"

-- 알고리즘 --
-1629_분할정복
"분할정복 재귀 필수" 나머지 분배 연산 법칙

"분할 정복의 3단계"
분할(Divide): 문제를 더 작은 하위 문제로 분할합니다. 일반적으로 문제를 절반으로 쪼개거나 더 작게 나눕니다.
정복(Conquer): 나눈 하위 문제를 재귀적으로 해결합니다. 이때, 하위 문제가 더 이상 나눌 수 없을 정도로 작아지면 직접 해결할 수 있습니다.
결합(Combine): 하위 문제의 결과를 합쳐서 원래 문제의 해답을 구합니다.

EX) A를 B번 곱한 수를 C로 나눴을 때 나머지 구하기
A=2,B=10,C=3
2^1 % 3 = 2
2^2 % 3 = (2 * 2) % 3 = 4 % 3 = 1
2^5 % 3 = (1 * 1 * 2) % 3 = 2 % 3 = 2
2^10 % 3 = (2 * 2) % 3 = 4 % 3 = 1

--------------------
0924
-- 바킹독 -- 
--0x09 - BFS
-0x00. 예시
Flood Fill 기능
그림판 페인트 기능_외부 윤곽선을 따라서 구분되는 영역의 색을 
한꺼번에 바꾸는 거 
BFS(Breadth First Search)
:다차원 배열에서 각 칸을 방문할 때 너비를 우선으로 방문하는 알고리즘 

-0x01. 예시 
시작하는 칸을 큐에 넣고 방문 표시 남김
이후 큐에서 원소 꺼내고 그 칸과 인접한 칸에 대해 
처음으로 방문했으면 방문 표시를 남기고 해당 칸을 큐에 삽입
큐가 빌 때까지 2번 반복 
모든 칸이 큐에 1번씩 들어가므로, 칸이 N개 일 때, O(N)

자주하는 실수 
1. 시작점에 방문 표시 남기지 않는 경우 
2. 큐에 넣었을 때 표시하지 않고, 큐에서 빼낼 때 방문 표시 남기기
3. 이웃한 원소가 범위를 벗어났는지에 대해 잘못 체크 

-STL pair 
pair<int, string> p1(1, "Hello");
pair<int, string> p = make_pair(5, "apple");
>>> "make_pair"은 "type"선언 안 해도 자동으로 들어감 

-fill 함수 
"fill(arr, arr + 5, 7) fills the array arr with the value 7"
-1926 그림 


0x02. 응용 1 - 거리 측정
-2178 미로 탐색 


0x03. 응용 2- 시작점이 여러개일 때 
-7576 토마토 

-- 알고리즘 -- 
-2630. 색종이 자르기 
배열, 이차원 배열 활용, 
이차원에서의 분할정복 활용 >>> 재귀를 4번 돌리면 된다.!

-------------
0924
1926,2178,7576 문제 풀이 하고 바킹독 0x04 응용 예시 이어서 듣기 
